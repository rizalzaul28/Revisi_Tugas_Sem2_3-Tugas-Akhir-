/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author rizan
 */
public class MenuUtama extends javax.swing.JFrame {

    /**
     * Creates new form MenuUtama
     */
    private Timer timer;

    public MenuUtama() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        //lb_Username.setText(Session.getUsername());

        execute();

        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                TampilWaktu();
            }
        });

        timer.start();
    }

    private void TampilWaktu() {
        Calendar calendar = Calendar.getInstance();
        Date now = new Date();
        SimpleDateFormat formatHari = new SimpleDateFormat("EEEE", new Locale("in", "ID"));
        SimpleDateFormat formatTanggal = new SimpleDateFormat("dd MMMM yyyy", new Locale("in", "ID"));
        SimpleDateFormat formatJam = new SimpleDateFormat("HH:mm:ss", new Locale("in", "ID"));
        String hari = formatHari.format(now);
        String tanggal = formatTanggal.format(now);
        String jam = formatJam.format(now);
        lb_Tanggal.setText(hari + ", " + tanggal);
        lb_Jam.setText(jam);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_Kiri = new javax.swing.JPanel();
        pn_KiriAtas = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lb_Username = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pn_Sidebar = new javax.swing.JPanel();
        pn_KiriBawah = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pn_Kanan = new javax.swing.JPanel();
        pn_KananAtas = new jpg3hor.JPG3Hor();
        lb_Jam = new javax.swing.JLabel();
        lb_Tanggal = new javax.swing.JLabel();
        pn_Dasar = new javax.swing.JPanel();
        pn_Utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pn_Kiri.setBackground(new java.awt.Color(51, 51, 255));

        pn_KiriAtas.setBackground(new java.awt.Color(51, 51, 255));
        pn_KiriAtas.setForeground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SELAMAT DATANG");

        lb_Username.setFont(new java.awt.Font("Dialog", 1, 17)); // NOI18N
        lb_Username.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Username.setText("USERNAME2");

        javax.swing.GroupLayout pn_KiriAtasLayout = new javax.swing.GroupLayout(pn_KiriAtas);
        pn_KiriAtas.setLayout(pn_KiriAtasLayout);
        pn_KiriAtasLayout.setHorizontalGroup(
            pn_KiriAtasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_KiriAtasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_KiriAtasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                    .addComponent(lb_Username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pn_KiriAtasLayout.setVerticalGroup(
            pn_KiriAtasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_KiriAtasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.setBorder(null);

        pn_Sidebar.setBackground(new java.awt.Color(51, 51, 255));
        pn_Sidebar.setLayout(new javax.swing.BoxLayout(pn_Sidebar, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pn_Sidebar);

        pn_KiriBawah.setBackground(new java.awt.Color(51, 51, 255));
        pn_KiriBawah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pn_KiriBawahMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pn_KiriBawahMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pn_KiriBawahMouseExited(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logout Rounded.png"))); // NOI18N

        javax.swing.GroupLayout pn_KiriBawahLayout = new javax.swing.GroupLayout(pn_KiriBawah);
        pn_KiriBawah.setLayout(pn_KiriBawahLayout);
        pn_KiriBawahLayout.setHorizontalGroup(
            pn_KiriBawahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_KiriBawahLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pn_KiriBawahLayout.setVerticalGroup(
            pn_KiriBawahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_KiriBawahLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        javax.swing.GroupLayout pn_KiriLayout = new javax.swing.GroupLayout(pn_Kiri);
        pn_Kiri.setLayout(pn_KiriLayout);
        pn_KiriLayout.setHorizontalGroup(
            pn_KiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(pn_KiriAtas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pn_KiriBawah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pn_KiriLayout.setVerticalGroup(
            pn_KiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_KiriLayout.createSequentialGroup()
                .addComponent(pn_KiriAtas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(pn_KiriBawah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(pn_Kiri, java.awt.BorderLayout.LINE_START);

        pn_Kanan.setLayout(new java.awt.BorderLayout());

        lb_Jam.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        lb_Jam.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lb_Jam.setText("Jam 999");

        lb_Tanggal.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        lb_Tanggal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lb_Tanggal.setText("Tanggal 999");

        javax.swing.GroupLayout pn_KananAtasLayout = new javax.swing.GroupLayout(pn_KananAtas);
        pn_KananAtas.setLayout(pn_KananAtasLayout);
        pn_KananAtasLayout.setHorizontalGroup(
            pn_KananAtasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_KananAtasLayout.createSequentialGroup()
                .addContainerGap(922, Short.MAX_VALUE)
                .addGroup(pn_KananAtasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb_Jam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_Tanggal, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                .addContainerGap())
        );
        pn_KananAtasLayout.setVerticalGroup(
            pn_KananAtasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_KananAtasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_Jam, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_Tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pn_Kanan.add(pn_KananAtas, java.awt.BorderLayout.PAGE_START);

        pn_Dasar.setBackground(new java.awt.Color(0, 204, 204));

        pn_Utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_DasarLayout = new javax.swing.GroupLayout(pn_Dasar);
        pn_Dasar.setLayout(pn_DasarLayout);
        pn_DasarLayout.setHorizontalGroup(
            pn_DasarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_DasarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_Utama, javax.swing.GroupLayout.DEFAULT_SIZE, 1054, Short.MAX_VALUE)
                .addContainerGap())
        );
        pn_DasarLayout.setVerticalGroup(
            pn_DasarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_DasarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_Utama, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                .addContainerGap())
        );

        pn_Kanan.add(pn_Dasar, java.awt.BorderLayout.CENTER);

        getContentPane().add(pn_Kanan, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pn_KiriBawahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_KiriBawahMouseClicked
        dispose();
    }//GEN-LAST:event_pn_KiriBawahMouseClicked

    private void pn_KiriBawahMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_KiriBawahMouseEntered
        pn_KiriBawah.setBackground(new Color(0, 0, 204));
    }//GEN-LAST:event_pn_KiriBawahMouseEntered

    private void pn_KiriBawahMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_KiriBawahMouseExited
        pn_KiriBawah.setBackground(new Color(51, 51, 255));
    }//GEN-LAST:event_pn_KiriBawahMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_Jam;
    private javax.swing.JLabel lb_Tanggal;
    public static javax.swing.JLabel lb_Username;
    private javax.swing.JPanel pn_Dasar;
    private javax.swing.JPanel pn_Kanan;
    private jpg3hor.JPG3Hor pn_KananAtas;
    private javax.swing.JPanel pn_Kiri;
    private javax.swing.JPanel pn_KiriAtas;
    private javax.swing.JPanel pn_KiriBawah;
    private javax.swing.JPanel pn_Sidebar;
    private javax.swing.JPanel pn_Utama;
    // End of variables declaration//GEN-END:variables

    private void execute() {

        // Icon Menu
        ImageIcon iconDashboard                     = new ImageIcon(getClass().getResource("/Images/IconDashboard.png"));
        ImageIcon iconBagian                        = new ImageIcon(getClass().getResource("/Images/IconBagian.png"));
        ImageIcon iconKategori                      = new ImageIcon(getClass().getResource("/Images/IconKategori.png"));
        ImageIcon iconSurat                         = new ImageIcon(getClass().getResource("/Images/IconSurat.png"));
        ImageIcon iconLog                           = new ImageIcon(getClass().getResource("/Images/IconLog.png"));
        ImageIcon iconSampah                        = new ImageIcon(getClass().getResource("/Images/IconSampah.png"));

        // Icon Sub Menu
        ImageIcon iconSubBagian                     = new ImageIcon(getClass().getResource("/Images/IconSubBagian.png"));
        ImageIcon iconSubKategori                   = new ImageIcon(getClass().getResource("/Images/IconSubKategori.png"));
        ImageIcon iconSubSuratKeluar                = new ImageIcon(getClass().getResource("/Images/IconSuratKeluar.png"));
        ImageIcon iconSubSuratMasuk                 = new ImageIcon(getClass().getResource("/Images/IconSuratMasuk.png"));
        ImageIcon iconSubLog                        = new ImageIcon(getClass().getResource("/Images/IconSubLog.png"));

        // Mengeksekusi Sub Menu
        MenuItem menuSuratKeluar                    = new MenuItem(null, true, iconSubSuratKeluar, "Surat Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    pn_Utama.removeAll();
                    pn_Utama.add(new menuSuratKeluar());
                    pn_Utama.repaint();
                    pn_Utama.revalidate();
                } catch (SQLException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        MenuItem menuLogSuratKeluar                = new MenuItem(null, true, iconSubSuratKeluar, "Log Surat Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    pn_Utama.removeAll();
                    pn_Utama.add(new menuLogSuratKeluar());
                    pn_Utama.repaint();
                    pn_Utama.revalidate();
                } catch (ParseException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        MenuItem menuSampahSuratKeluar            = new MenuItem(null, true, iconSampah, "Sampah Surat Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    pn_Utama.removeAll();
                    pn_Utama.add(new menuSampahSuratKeluar());
                    pn_Utama.repaint();
                    pn_Utama.revalidate();
                } catch (ParseException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        MenuItem menuLogBagian                      = new MenuItem(null, true, iconSubBagian, "Log Bagian", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    pn_Utama.removeAll();
                    pn_Utama.add(new menuLogBagian());
                    pn_Utama.repaint();
                    pn_Utama.revalidate();
                } catch (ParseException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        MenuItem menuSampahBagian                   = new MenuItem(null, true, iconSampah, "Sampah Bagian", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new menuSampahBagian());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });
        
        MenuItem menuLogKategori                    = new MenuItem(null, true, iconSubKategori, "Log Kategori", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    pn_Utama.removeAll();
                    pn_Utama.add(new menuLogKategori());
                    pn_Utama.repaint();
                    pn_Utama.revalidate();
                } catch (ParseException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        MenuItem menuSampahKategori                 = new MenuItem(null, true, iconSampah, "Sampah Kategori", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new  menuSampahKategori());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });

        // Mengeksekusi Menu
        MenuItem menuDashboard                      = new MenuItem(iconDashboard, false, null, "Dashboard", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new menuDashboard());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });

        MenuItem menuBagian                         = new MenuItem(iconBagian, false, null, "Bagian", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new menuBagian());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });

        MenuItem menuKategori                       = new MenuItem(iconKategori, false, null, "Kategori", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new menuKategori());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });

        MenuItem menuSurat                          = new MenuItem(iconSurat, false, null, "Surat", null, menuSuratKeluar);        
        MenuItem menuLog                            = new MenuItem(iconLog, false, null, "Log Aktifitas", null, menuLogBagian, menuLogKategori, menuLogSuratKeluar);
        MenuItem menuSampah                         = new MenuItem(iconSampah, false, null, "Sampah", null, menuSampahBagian, menuSampahKategori, menuSampahSuratKeluar);

        // Menambahkan Menu dan Sub Menu
        addMenu(menuDashboard, menuBagian, menuKategori, menuSurat, menuLog, menuSampah);

    }

    private void addMenu(MenuItem... menu) {
        for (int i = 0; i < menu.length; i++) {
            pn_Sidebar.add(menu[i]);
            ArrayList<MenuItem> subMenu = menu[i].getSubMenu();
            for (MenuItem m : subMenu) {
                addMenu(m);
            }
        }
        pn_Sidebar.revalidate();
    }

}
